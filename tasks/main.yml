---
# tasks file for tailscale
- name: Import tasks to setup repository.
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "repo_{{ ansible_hostname }}.yml"
        - "repo_{{ ansible_facts['distribution'] }}_{{ ansible_architecture }}.yml"
      skip: false

- name: Import tasks to setup repository.
  ansible.builtin.include_tasks: "repo_{{ ansible_facts['distribution'] }}_{{ ansible_architecture }}.yml"
  when: false

- name: Ensure tailscale is installed.
  ansible.builtin.package:
    name: tailscale
    state: present

- name: Ensure tailscaled service is started.
  ansible.builtin.service:
    name: tailscaled.service
    state: started
    enabled: true

- name: Check if machine already has an IP assigned.
  ansible.builtin.command:
    cmd: "tailscale status --peers=false"
  register: tailscale_status
  failed_when: false
  changed_when: "'Logged out' in tailscale_status.stdout"
  notify: Log into tailscale

- name: Run exit node.
  when: tailscale_advertise_exit_node
  notify: Log into tailscale
  block:
    - name: Ensure ip forwarding is correctly configured.
      when: tailscale_advertise_exit_node
      ansible.posix.sysctl:
        sysctl_file: /etc/sysctl.d/99-tailscale.conf
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_set: true
        state: present
        reload: true
      loop:
        - { name: 'net.ipv4.ip_forward', value: '1'}
        - { name: 'net.ipv6.conf.all.forwarding', value: '1'}

    - name: Allow masquerading in firewalld.
      ansible.posix.firewalld:
        masquerade: true
        state: enabled
        permanent: true
      when: ansible_facts['os_family'] == 'RedHat'

- name: Flush handlers.
  ansible.builtin.meta: flush_handlers
